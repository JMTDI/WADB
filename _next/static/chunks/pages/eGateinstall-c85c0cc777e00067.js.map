{"version":3,"file":"static/chunks/pages/eGateinstall-c85c0cc777e00067.js","mappings":"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","sources":["webpack://_N_E/?a1af","webpack://_N_E/./src/pages/eGateinstall.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/eGateinstall\",\n      function () {\n        return require(\"private-next-pages/eGateinstall.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/eGateinstall\"])\n      });\n    }\n  ","import React from \"react\";\nimport { PrimaryButton, Stack, ProgressIndicator } from \"@fluentui/react\";\nimport { PackageManager } from \"@yume-chan/android-bin\";\nimport { WrapConsumableStream } from \"@yume-chan/stream-extra\";\nimport { action, makeAutoObservable, observable, runInAction } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport { NextPage } from \"next\";\nimport Head from \"next/head\";\nimport { GLOBAL_STATE } from \"../state\";\nimport { ProgressStream, RouteStackProps, createFileStream } from \"../utils\";\n\nenum Stage {\n    Downloading,\n    Installing,\n    SettingPermissions,\n    Completed,\n}\n\ninterface Progress {\n    filename: string;\n    stage: Stage;\n    value: number | undefined;\n}\n\ntype Variant = \"general\" | \"lg-classic\" | \"external\";\n\nconst variants = {\n    \"general\": \"https://github.com/offlinesoftwaresolutions/eGate/releases/latest/download/app-general-release.apk\",\n    \"lg-classic\": \"https://github.com/offlinesoftwaresolutions/eGate/releases/latest/download/app-lgclassic-release.apk\",\n    \"external\": \"https://github.com/offlinesoftwaresolutions/eGate/releases/latest/download/app-external_accessibility-release.apk\"\n};\n\nconst variantAssetMap: Record<Variant, string> = {\n    general: \"app-general-release.apk\",\n    \"lg-classic\": \"app-lgclassic-release.apk\",\n    external: \"app-external_accessibility-release.apk\",\n};\n\nconst variantPackageMap: Record<Variant, string> = {\n    general: \"com.oss.egate\",\n    \"lg-classic\": \"com.android.cts.egate\",\n    external: \"com.oss.accessibility\",\n};\n\nclass InstallPageState {\n    installing = false;\n    progress: Progress | undefined = undefined;\n    log: string = \"\";\n    options: Record<string, any> = {};\n\n    constructor() {\n        makeAutoObservable(this, {\n            progress: observable.ref,\n        });\n    }\n\n    runCommand = async (cmd: string): Promise<string> => {\n        if (\n            !GLOBAL_STATE.adb ||\n            !GLOBAL_STATE.adb.subprocess ||\n            typeof GLOBAL_STATE.adb.subprocess.shell !== \"function\"\n        ) {\n            throw new Error(\"ADB subprocess.shell not available.\");\n        }\n        try {\n            const process = await GLOBAL_STATE.adb.subprocess.shell(cmd);\n            const decoder = new TextDecoder();\n            let accumulatedOutput = \"\";\n            const reader = process.stdout.getReader();\n            try {\n                while (true) {\n                    const { done, value } = await reader.read();\n                    if (done) break;\n                    accumulatedOutput += decoder.decode(value, { stream: true });\n                }\n            } finally {\n                reader.releaseLock();\n            }\n            if (process.stderr) {\n                const errorReader = process.stderr.getReader();\n                try {\n                    while (true) {\n                        const { done, value } = await errorReader.read();\n                        if (done) break;\n                        accumulatedOutput += decoder.decode(value, { stream: true });\n                    }\n                } finally {\n                    errorReader.releaseLock();\n                }\n            }\n            return accumulatedOutput.trim();\n        } catch (error: any) {\n            throw new Error(`Command execution failed: ${error.message}`);\n        }\n    };\n\n    install = async (variant: Variant) => {\n        const directUrl = variants[variant];\n        let blob: Blob;\n        \n        try {\n            runInAction(() => {\n                this.progress = { filename: variantAssetMap[variant], stage: Stage.Downloading, value: 0 };\n                this.log = `Downloading \"${variant}\" variant...\\n`;\n                this.installing = true;\n            });\n            \n            // Try multiple CORS proxy services in order\n            const corsProxies = [\n                'https://api.allorigins.win/raw?url=',\n                'https://cors-anywhere.herokuapp.com/',\n                'https://thingproxy.freeboard.io/fetch/',\n                'https://api.codetabs.com/v1/proxy?quest='\n            ];\n            \n            let response: Response | null = null;\n            let lastError: Error | null = null;\n            \n            // Try direct download first (might work in some environments)\n            try {\n                response = await fetch(directUrl);\n                if (response.ok) {\n                    runInAction(() => {\n                        this.log += `Direct download successful\\n`;\n                    });\n                } else {\n                    throw new Error(`Direct download failed: ${response.status}`);\n                }\n            } catch (directError) {\n                runInAction(() => {\n                    this.log += `Direct download failed, trying CORS proxies...\\n`;\n                });\n                \n                // Try each CORS proxy\n                for (const proxy of corsProxies) {\n                    try {\n                        const proxyUrl = proxy + encodeURIComponent(directUrl);\n                        runInAction(() => {\n                            this.log += `Trying proxy: ${proxy}\\n`;\n                        });\n                        \n                        response = await fetch(proxyUrl, {\n                            headers: {\n                                'X-Requested-With': 'XMLHttpRequest',\n                                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\n                            }\n                        });\n                        \n                        if (response.ok) {\n                            runInAction(() => {\n                                this.log += `Proxy successful: ${proxy}\\n`;\n                            });\n                            break;\n                        } else {\n                            throw new Error(`Proxy failed: ${response.status}`);\n                        }\n                    } catch (proxyError) {\n                        lastError = proxyError as Error;\n                        runInAction(() => {\n                            this.log += `Proxy failed: ${proxy} - ${lastError?.message}\\n`;\n                        });\n                        response = null;\n                    }\n                }\n            }\n            \n            if (!response || !response.ok) {\n                throw new Error(`All download methods failed. Last error: ${lastError?.message}`);\n            }\n            \n            blob = await response.blob();\n            \n            if (blob.size === 0) {\n                throw new Error(\"Downloaded file is empty\");\n            }\n            \n        } catch (error: any) {\n            runInAction(() => {\n                this.log += `Download error for variant \"${variant}\": ${error.message}\\n`;\n                this.installing = false;\n            });\n            return;\n        }\n        const fileName = variantAssetMap[variant];\n        const file = new File([blob], fileName, {\n            type: blob.type,\n            lastModified: Date.now(),\n        });\n        runInAction(() => {\n            this.progress = { filename: file.name, stage: Stage.Installing, value: 0.1 };\n            this.log += `APK downloaded: ${file.name}\\n`;\n        });\n        if (!GLOBAL_STATE.adb) {\n            runInAction(() => {\n                this.log += \"ADB connection not established via GLOBAL_STATE.adb.\\n\";\n                this.installing = false;\n            });\n            return;\n        }\n        const pm = new PackageManager(GLOBAL_STATE.adb);\n        const start = Date.now();\n        try {\n            const installLogOutput = await pm.installStream(\n                file.size,\n                createFileStream(file)\n                    .pipeThrough(new WrapConsumableStream())\n                    .pipeThrough(\n                        new ProgressStream(\n                            action((transferred: number) => {\n                                const percentage = transferred / file.size;\n                                this.progress = {\n                                    filename: file.name,\n                                    stage: transferred < file.size ? Stage.Installing : Stage.SettingPermissions,\n                                    value: transferred < file.size ? percentage : 0.8,\n                                };\n                            })\n                        )\n                    ),\n                { ...this.options, grantRuntimePermissions: true } as any\n            );\n            runInAction(() => {\n                this.log += `Installation output: ${installLogOutput}\\n`;\n            });\n        } catch (error: any) {\n            runInAction(() => {\n                this.log += `Error during APK install: ${error.message}\\n`;\n                this.installing = false;\n            });\n            return;\n        }\n        const pkg = variantPackageMap[variant];\n        try {\n            runInAction(() => {\n                this.log += `Setting up package: ${pkg}\\n`;\n                this.progress = { filename: file.name, stage: Stage.SettingPermissions, value: 0.9 };\n            });\n            if (variant === \"lg-classic\") {\n                try {\n                    const uninstallOutput = await this.runCommand(\"pm uninstall -k --user 0 com.qualcomm.simcontacts\");\n                    runInAction(() => {\n                        this.log += `Uninstall simcontacts output: ${uninstallOutput || 'Command completed'}\\n`;\n                    });\n                } catch (error: any) {\n                    runInAction(() => {\n                        this.log += `Uninstall simcontacts failed: ${error.message}\\n`;\n                    });\n                }\n                try {\n                    const dpmOutput = await this.runCommand(\"dpm set-device-owner com.android.cts.egate/.a\");\n                    runInAction(() => {\n                        this.log += `Device owner set (lg-classic): ${dpmOutput || 'Command completed'}\\n`;\n                    });\n                } catch (error: any) {\n                    runInAction(() => {\n                        this.log += `Device owner setup failed: ${error.message}\\n`;\n                    });\n                }\n            } else if (variant === \"general\") {\n                try {\n                    const dpmOutput = await this.runCommand(`dpm set-device-owner ${pkg}/.a`);\n                    runInAction(() => {\n                        this.log += `Device owner set: ${dpmOutput || 'Command completed'}\\n`;\n                    });\n                } catch (error: any) {\n                    runInAction(() => {\n                        this.log += `Device owner setup failed: ${error.message}\\n`;\n                    });\n                }\n            } else if (variant === \"external\") {\n                runInAction(() => {\n                    this.log += `Skipping device owner setup for external accessibility variant.\\n`;\n                });\n            }\n            runInAction(() => {\n                this.progress = { filename: file.name, stage: Stage.Completed, value: 1 };\n            });\n        } catch (error: any) {\n            runInAction(() => {\n                this.log += `Error during package setup: ${error.message}\\n`;\n                this.progress = { filename: file.name, stage: Stage.Completed, value: 1 };\n            });\n        }\n        const elapsed = Date.now() - start;\n        const transferRate = (file.size / (elapsed / 1000) / 1024 / 1024).toFixed(2);\n        runInAction(() => {\n            this.log += `\\nInstall process completed in ${elapsed} ms at ${transferRate} MB/s\\n`;\n            this.installing = false;\n        });\n    };\n}\n\nconst state = new InstallPageState();\n\nconst InstallEgate: NextPage = () => {\n    const isDeviceConnected = Boolean(GLOBAL_STATE.adb);\n    const areButtonsDisabled = !isDeviceConnected || state.installing;\n\n    return (\n        <Stack {...RouteStackProps} tokens={{ childrenGap: 20 }}>\n            <Head>\n                <title>eGate auto-installer - WADB</title>\n            </Head>\n            <Stack horizontal tokens={{ childrenGap: 15 }}>\n                <PrimaryButton \n                    disabled={areButtonsDisabled} \n                    text=\"General\" \n                    onClick={() => state.install(\"general\")} \n                />\n                <PrimaryButton \n                    disabled={areButtonsDisabled} \n                    text=\"LG Classic\" \n                    onClick={() => state.install(\"lg-classic\")} \n                />\n                <PrimaryButton \n                    disabled={areButtonsDisabled} \n                    text=\"External Accessibility\" \n                    onClick={() => state.install(\"external\")} \n                />\n            </Stack>\n            {state.progress && (\n                <ProgressIndicator\n                    styles={{ root: { width: 300, marginTop: 20 } }}\n                    label={state.progress.filename}\n                    percentComplete={state.progress.value}\n                    description={Stage[state.progress.stage]}\n                />\n            )}\n            {state.log && (\n                <pre style={{ marginTop: 20, whiteSpace: \"pre-wrap\", fontFamily: \"monospace\" }}>\n                    {state.log}\n                </pre>\n            )}\n        </Stack>\n    );\n};\n\nexport default observer(InstallEgate);\n"],"names":["window","__NEXT_P","push","__webpack_require__","Stage","Downloading","Installing","SettingPermissions","Completed","variants","variantAssetMap","general","external","variantPackageMap","state","constructor","installing","progress","undefined","log","options","runCommand","cmd","GLOBAL_STATE","adb","subprocess","shell","process","decoder","TextDecoder","accumulatedOutput","reader","stdout","getReader","done","value","read","decode","stream","releaseLock","stderr","errorReader","trim","error","concat","message","install","variant","blob","directUrl","runInAction","filename","stage","response","lastError","fetch","ok","status","directError","proxy","proxyUrl","encodeURIComponent","headers","proxyError","size","fileName","file","File","type","lastModified","Date","now","name","pm","PackageManager","start","installLogOutput","installStream","createFileStream","pipeThrough","WrapConsumableStream","ProgressStream","action","percentage","transferred","grantRuntimePermissions","pkg","uninstallOutput","dpmOutput","elapsed","transferRate","toFixed","makeAutoObservable","observable","ref","__webpack_exports__","observer","isDeviceConnected","Boolean","areButtonsDisabled","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Stack","RouteStackProps","tokens","childrenGap","jsx","Head","title","horizontal","PrimaryButton","disabled","text","onClick","ProgressIndicator","styles","root","width","marginTop","label","percentComplete","description","pre","style","whiteSpace","fontFamily"],"sourceRoot":""}