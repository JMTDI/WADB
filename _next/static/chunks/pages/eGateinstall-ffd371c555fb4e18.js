(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[867],{3601:function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/eGateinstall",function(){return a(5983)}])},5983:function(e,t,a){"use strict";a.r(t);var s,i,n=a(541);a(8425);var l=a(4185),o=a(3007),r=a(5129),c=a(6694),d=a(9003),h=a(1194),g=a(6643),p=a(1768),m=a.n(p),u=a(5654),f=a(2274);(s=i||(i={}))[s.Downloading=0]="Downloading",s[s.Installing=1]="Installing",s[s.SettingPermissions=2]="SettingPermissions",s[s.Completed=3]="Completed";let w={general:"app-general-release.apk","lg-classic":"app-lgclassic-release.apk",external:"app-external_accessibility-release.apk"},b={general:"com.oss.egate","lg-classic":"com.android.cts.egate",external:"com.oss.accessibility"},k={general:"https://github.com/offlinesoftwaresolutions/eGate/releases/latest/download/app-general-release.apk","lg-classic":"https://github.com/offlinesoftwaresolutions/eGate/releases/latest/download/app-lgclassic-release.apk",external:"https://github.com/offlinesoftwaresolutions/eGate/releases/latest/download/app-external_accessibility-release.apk"},y=new class{constructor(){this.installing=!1,this.progress=void 0,this.log="",this.options={},this.runCommand=async e=>{if(!u.GLOBAL_STATE.adb||!u.GLOBAL_STATE.adb.subprocess||"function"!=typeof u.GLOBAL_STATE.adb.subprocess.shell)throw Error("ADB subprocess.shell not available.");try{let t=await u.GLOBAL_STATE.adb.subprocess.shell(e),a=new TextDecoder,s="",i=t.stdout.getReader();try{for(;;){let{done:e,value:t}=await i.read();if(e)break;s+=a.decode(t,{stream:!0})}}finally{i.releaseLock()}if(t.stderr){let e=t.stderr.getReader();try{for(;;){let{done:t,value:i}=await e.read();if(t)break;s+=a.decode(i,{stream:!0})}}finally{e.releaseLock()}}return s.trim()}catch(e){throw Error("Command execution failed: ".concat(e.message))}},this.fetchApkWithProgress=async e=>{try{var t;let a="/api/proxy?variant=".concat(encodeURIComponent(e)),s=await fetch(a,{method:"GET",headers:{Accept:"application/vnd.android.package-archive, application/octet-stream, */*"}});if(!s.ok)return await this.fetchDirectWithFallback(e);let n=s.headers.get("Content-Length"),l=n?parseInt(n,10):0,o=0,r=null===(t=s.body)||void 0===t?void 0:t.getReader();if(!r)throw Error("Response body is not readable");let c=[];for(;;){let{done:t,value:a}=await r.read();if(t)break;if(c.push(a),o+=a.length,l>0){let t=o/l;(0,h.z)(()=>{this.progress={filename:w[e],stage:i.Downloading,value:.8*t}})}}let d=c.reduce((e,t)=>e+t.length,0),g=new Uint8Array(d),p=0;for(let e of c)g.set(e,p),p+=e.length;return new Blob([g],{type:"application/vnd.android.package-archive"})}catch(t){return await this.fetchDirectWithFallback(e)}},this.fetchDirectWithFallback=async e=>{let t=k[e];try{let e=await fetch(t,{mode:"no-cors",cache:"no-cache"}),a=await e.blob();if(a.size<1048576)throw Error("Downloaded file is too small - may be an error page");return a}catch(e){try{let e=await fetch(t,{mode:"cors",headers:{Accept:"*/*",Origin:window.location.origin}});if(!e.ok)throw Error("HTTP ".concat(e.status,": ").concat(e.statusText));return await e.blob()}catch(e){throw Error("All download methods failed. Last error: ".concat(e.message))}}},this.install=async e=>{let t;try{(0,h.z)(()=>{this.progress={filename:w[e],stage:i.Downloading,value:0},this.log='Downloading "'.concat(e,'" variant from GitHub releases...\n'),this.installing=!0}),t=await this.fetchApkWithProgress(e),(0,h.z)(()=>{this.log+="Download completed: ".concat((t.size/1024/1024).toFixed(2)," MB\n")})}catch(t){(0,h.z)(()=>{this.log+='Download error for variant "'.concat(e,'": ').concat(t.message,"\n"),this.installing=!1});return}let a=w[e],s=new File([t],a,{type:"application/vnd.android.package-archive",lastModified:Date.now()});if((0,h.z)(()=>{this.progress={filename:s.name,stage:i.Installing,value:.8},this.log+="APK prepared for installation: ".concat(s.name,"\n")}),!u.GLOBAL_STATE.adb){(0,h.z)(()=>{this.log+="ADB connection not established via GLOBAL_STATE.adb.\n",this.installing=!1});return}let n=new c.LE(u.GLOBAL_STATE.adb),l=Date.now();try{let e=await n.installStream(s.size,(0,f.Xd)(s).pipeThrough(new d.WrapConsumableStream).pipeThrough(new f.hK((0,h.aD)(e=>{let t=.8+e/s.size*.15;this.progress={filename:s.name,stage:e<s.size?i.Installing:i.SettingPermissions,value:e<s.size?t:.95}}))),{...this.options,grantRuntimePermissions:!0});(0,h.z)(()=>{this.log+="Installation output: ".concat(e,"\n")})}catch(e){(0,h.z)(()=>{this.log+="Error during APK install: ".concat(e.message,"\n"),this.installing=!1});return}let o=b[e];try{if((0,h.z)(()=>{this.log+="Setting up package: ".concat(o,"\n"),this.progress={filename:s.name,stage:i.SettingPermissions,value:.95}}),"lg-classic"===e){try{let e=await this.runCommand("pm uninstall -k --user 0 com.qualcomm.simcontacts");(0,h.z)(()=>{this.log+="Uninstall simcontacts output: ".concat(e||"Command completed","\n")})}catch(e){(0,h.z)(()=>{this.log+="Uninstall simcontacts failed: ".concat(e.message,"\n")})}try{let e=await this.runCommand("dpm set-device-owner com.android.cts.egate/.a");(0,h.z)(()=>{this.log+="Device owner set (lg-classic): ".concat(e||"Command completed","\n")})}catch(e){(0,h.z)(()=>{this.log+="Device owner setup failed: ".concat(e.message,"\n")})}}else if("general"===e)try{let e=await this.runCommand("dpm set-device-owner ".concat(o,"/.a"));(0,h.z)(()=>{this.log+="Device owner set: ".concat(e||"Command completed","\n")})}catch(e){(0,h.z)(()=>{this.log+="Device owner setup failed: ".concat(e.message,"\n")})}else"external"===e&&(0,h.z)(()=>{this.log+="Skipping device owner setup for external accessibility variant.\n"});(0,h.z)(()=>{this.progress={filename:s.name,stage:i.Completed,value:1}})}catch(e){(0,h.z)(()=>{this.log+="Error during package setup: ".concat(e.message,"\n"),this.progress={filename:s.name,stage:i.Completed,value:1}})}let r=Date.now()-l,g=(s.size/(r/1e3)/1024/1024).toFixed(2);(0,h.z)(()=>{this.log+="\nInstall process completed in ".concat(r," ms at ").concat(g," MB/s\n"),this.installing=!1})},(0,h.ky)(this,{progress:h.LO.ref})}};t.default=(0,g.Pi)(()=>{let e=!!u.GLOBAL_STATE.adb,t=!e||y.installing;return(0,n.jsxs)(l.K,{...f.LE,tokens:{childrenGap:20},children:[(0,n.jsx)(m(),{children:(0,n.jsx)("title",{children:"eGate auto-installer - WADB"})}),(0,n.jsxs)(l.K,{horizontal:!0,tokens:{childrenGap:15},children:[(0,n.jsx)(o.K,{disabled:t,text:"General",onClick:()=>y.install("general")}),(0,n.jsx)(o.K,{disabled:t,text:"LG Classic",onClick:()=>y.install("lg-classic")}),(0,n.jsx)(o.K,{disabled:t,text:"External Accessibility",onClick:()=>y.install("external")})]}),y.progress&&(0,n.jsx)(r.Y,{styles:{root:{width:300,marginTop:20}},label:y.progress.filename,percentComplete:y.progress.value,description:i[y.progress.stage]}),y.log&&(0,n.jsx)("pre",{style:{marginTop:20,whiteSpace:"pre-wrap",fontFamily:"monospace"},children:y.log})]})})}},function(e){e.O(0,[774,888,179],function(){return e(e.s=3601)}),_N_E=e.O()}]);
//# sourceMappingURL=eGateinstall-ffd371c555fb4e18.js.map