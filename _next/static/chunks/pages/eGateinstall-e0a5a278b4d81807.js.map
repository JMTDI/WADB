{"version":3,"file":"static/chunks/pages/eGateinstall-e0a5a278b4d81807.js","mappings":"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","sources":["webpack://_N_E/?a1af","webpack://_N_E/./src/pages/eGateinstall.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/eGateinstall\",\n      function () {\n        return require(\"private-next-pages/eGateinstall.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/eGateinstall\"])\n      });\n    }\n  ","import React from \"react\";\nimport { PrimaryButton, Stack, ProgressIndicator } from \"@fluentui/react\";\nimport { PackageManager } from \"@yume-chan/android-bin\";\nimport { WrapConsumableStream } from \"@yume-chan/stream-extra\";\nimport { action, makeAutoObservable, observable, runInAction } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport { NextPage } from \"next\";\nimport Head from \"next/head\";\nimport { GLOBAL_STATE } from \"../state\";\nimport { ProgressStream, RouteStackProps, createFileStream } from \"../utils\";\n\nenum Stage {\n    Downloading,\n    Installing,\n    SettingPermissions,\n    Completed,\n}\n\ninterface Progress {\n    filename: string;\n    stage: Stage;\n    value: number | undefined;\n}\n\ntype Variant = \"general\" | \"lg-classic\" | \"external\";\n\nconst variantAssetMap: Record<Variant, string> = {\n    general: \"app-general-release.apk\",\n    \"lg-classic\": \"app-lgclassic-release.apk\",\n    external: \"app-external_accessibility-release.apk\",\n};\n\nconst variantUrlMap: Record<Variant, string> = {\n    general: \"https://github.com/offlinesoftwaresolutions/eGate/releases/latest/download/app-general-release.apk\",\n    \"lg-classic\": \"https://github.com/offlinesoftwaresolutions/eGate/releases/latest/download/app-lgclassic-release.apk\",\n    external: \"https://github.com/offlinesoftwaresolutions/eGate/releases/latest/download/app-external_accessibility-release.apk\",\n};\n\nconst variantPackageMap: Record<Variant, string> = {\n    general: \"com.oss.egate\",\n    \"lg-classic\": \"com.android.cts.egate\",\n    external: \"com.oss.accessibility\",\n};\n\nclass InstallPageState {\n    installing = false;\n    progress: Progress | undefined = undefined;\n    log: string = \"\";\n    options: Record<string, any> = {};\n\n    constructor() {\n        makeAutoObservable(this, {\n            progress: observable.ref,\n        });\n    }\n\n    // More robust CORS bypass with multiple working proxies\n    private fetchWithCorsProxy = async (url: string): Promise<Response> => {\n        const proxies = [\n            // Proxy 1: AllOrigins (most reliable)\n            async (targetUrl: string) => {\n                const proxyUrl = `https://api.allorigins.win/raw?url=${encodeURIComponent(targetUrl)}`;\n                const response = await fetch(proxyUrl);\n                if (!response.ok) throw new Error(`AllOrigins proxy failed: ${response.status}`);\n                return response;\n            },\n            \n            // Proxy 2: Cors.sh\n            async (targetUrl: string) => {\n                const proxyUrl = `https://cors.sh/${targetUrl}`;\n                const response = await fetch(proxyUrl);\n                if (!response.ok) throw new Error(`Cors.sh proxy failed: ${response.status}`);\n                return response;\n            },\n            \n            // Proxy 3: Proxy-cors\n            async (targetUrl: string) => {\n                const proxyUrl = `https://proxy-cors.vercel.app/api/proxy?url=${encodeURIComponent(targetUrl)}`;\n                const response = await fetch(proxyUrl);\n                if (!response.ok) throw new Error(`Proxy-cors failed: ${response.status}`);\n                return response;\n            },\n            \n            // Proxy 4: No-cors mode (fallback)\n            async (targetUrl: string) => {\n                const response = await fetch(targetUrl, {\n                    method: 'GET',\n                    mode: 'no-cors',\n                    headers: {\n                        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',\n                    },\n                });\n                return response;\n            },\n            \n            // Proxy 5: Direct fetch (last resort)\n            async (targetUrl: string) => {\n                const response = await fetch(targetUrl, {\n                    method: 'GET',\n                    headers: {\n                        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',\n                        'Accept': 'application/vnd.android.package-archive,*/*',\n                        'Cache-Control': 'no-cache',\n                    },\n                });\n                return response;\n            }\n        ];\n\n        let lastError: Error | null = null;\n        \n        for (let i = 0; i < proxies.length; i++) {\n            try {\n                runInAction(() => {\n                    this.log += `Trying proxy method ${i + 1}...\\n`;\n                });\n                \n                const response = await proxies[i](url);\n                \n                if (response.ok || response.type === 'opaque') {\n                    runInAction(() => {\n                        this.log += `Proxy method ${i + 1} succeeded!\\n`;\n                    });\n                    return response;\n                }\n                \n                throw new Error(`Response not ok: ${response.status}`);\n            } catch (error: any) {\n                lastError = error;\n                runInAction(() => {\n                    this.log += `Proxy method ${i + 1} failed: ${error.message}\\n`;\n                });\n                continue;\n            }\n        }\n        \n        throw new Error(`All proxy methods failed. Last error: ${lastError?.message}`);\n    };\n\n    runCommand = async (cmd: string): Promise<string> => {\n        if (\n            !GLOBAL_STATE.adb ||\n            !GLOBAL_STATE.adb.subprocess ||\n            typeof GLOBAL_STATE.adb.subprocess.shell !== \"function\"\n        ) {\n            throw new Error(\"ADB subprocess.shell not available.\");\n        }\n        try {\n            const process = await GLOBAL_STATE.adb.subprocess.shell(cmd);\n            const decoder = new TextDecoder();\n            let accumulatedOutput = \"\";\n            const reader = process.stdout.getReader();\n            try {\n                while (true) {\n                    const { done, value } = await reader.read();\n                    if (done) break;\n                    accumulatedOutput += decoder.decode(value, { stream: true });\n                }\n            } finally {\n                reader.releaseLock();\n            }\n            if (process.stderr) {\n                const errorReader = process.stderr.getReader();\n                try {\n                    while (true) {\n                        const { done, value } = await errorReader.read();\n                        if (done) break;\n                        accumulatedOutput += decoder.decode(value, { stream: true });\n                    }\n                } finally {\n                    errorReader.releaseLock();\n                }\n            }\n            return accumulatedOutput.trim();\n        } catch (error: any) {\n            throw new Error(`Command execution failed: ${error.message}`);\n        }\n    };\n\n    install = async (variant: Variant) => {\n        const apkUrl = variantUrlMap[variant];\n        let blob: Blob;\n        try {\n            runInAction(() => {\n                this.progress = { filename: variantAssetMap[variant], stage: Stage.Downloading, value: 0 };\n                this.log = `Starting download of \"${variant}\" variant from GitHub...\\n`;\n                this.log += `Target URL: ${apkUrl}\\n`;\n                this.installing = true;\n            });\n            \n            // Use the robust CORS proxy with multiple fallbacks\n            const response = await this.fetchWithCorsProxy(apkUrl);\n            \n            // Handle opaque responses (from no-cors mode)\n            if (response.type === 'opaque') {\n                runInAction(() => {\n                    this.log += `Received opaque response (no-cors mode). Attempting to process...\\n`;\n                });\n                blob = await response.blob();\n            } else {\n                if (!response.ok) {\n                    throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n                }\n                \n                const contentLength = response.headers.get('content-length');\n                if (contentLength) {\n                    runInAction(() => {\n                        this.log += `Content length: ${(parseInt(contentLength) / 1024 / 1024).toFixed(2)} MB\\n`;\n                    });\n                }\n                \n                blob = await response.blob();\n            }\n            \n            if (!blob || blob.size === 0) {\n                throw new Error('Downloaded file is empty or invalid');\n            }\n            \n            runInAction(() => {\n                this.log += `Download completed! File size: ${(blob.size / 1024 / 1024).toFixed(2)} MB\\n`;\n            });\n            \n        } catch (error: any) {\n            runInAction(() => {\n                this.log += `Download error for variant \"${variant}\": ${error.message}\\n`;\n                this.log += `This might be due to CORS restrictions or network issues.\\n`;\n                this.installing = false;\n            });\n            return;\n        }\n        const fileName = variantAssetMap[variant];\n        const file = new File([blob], fileName, {\n            type: blob.type,\n            lastModified: Date.now(),\n        });\n        runInAction(() => {\n            this.progress = { filename: file.name, stage: Stage.Installing, value: 0.1 };\n            this.log += `APK downloaded: ${file.name}\\n`;\n        });\n        if (!GLOBAL_STATE.adb) {\n            runInAction(() => {\n                this.log += \"ADB connection not established via GLOBAL_STATE.adb.\\n\";\n                this.installing = false;\n            });\n            return;\n        }\n        const pm = new PackageManager(GLOBAL_STATE.adb);\n        const start = Date.now();\n        try {\n            const installLogOutput = await pm.installStream(\n                file.size,\n                createFileStream(file)\n                    .pipeThrough(new WrapConsumableStream())\n                    .pipeThrough(\n                        new ProgressStream(\n                            action((transferred: number) => {\n                                const percentage = transferred / file.size;\n                                this.progress = {\n                                    filename: file.name,\n                                    stage: transferred < file.size ? Stage.Installing : Stage.SettingPermissions,\n                                    value: transferred < file.size ? percentage : 0.8,\n                                };\n                            })\n                        )\n                    ),\n                { ...this.options, grantRuntimePermissions: true } as any\n            );\n            runInAction(() => {\n                this.log += `Installation output: ${installLogOutput}\\n`;\n            });\n        } catch (error: any) {\n            runInAction(() => {\n                this.log += `Error during APK install: ${error.message}\\n`;\n                this.installing = false;\n            });\n            return;\n        }\n        const pkg = variantPackageMap[variant];\n        try {\n            runInAction(() => {\n                this.log += `Setting up package: ${pkg}\\n`;\n                this.progress = { filename: file.name, stage: Stage.SettingPermissions, value: 0.9 };\n            });\n            if (variant === \"lg-classic\") {\n                try {\n                    const uninstallOutput = await this.runCommand(\"pm uninstall -k --user 0 com.qualcomm.simcontacts\");\n                    runInAction(() => {\n                        this.log += `Uninstall simcontacts output: ${uninstallOutput || 'Command completed'}\\n`;\n                    });\n                } catch (error: any) {\n                    runInAction(() => {\n                        this.log += `Uninstall simcontacts failed: ${error.message}\\n`;\n                    });\n                }\n                try {\n                    const dpmOutput = await this.runCommand(\"dpm set-device-owner com.android.cts.egate/.a\");\n                    runInAction(() => {\n                        this.log += `Device owner set (lg-classic): ${dpmOutput || 'Command completed'}\\n`;\n                    });\n                } catch (error: any) {\n                    runInAction(() => {\n                        this.log += `Device owner setup failed: ${error.message}\\n`;\n                    });\n                }\n            } else if (variant === \"general\") {\n                try {\n                    const dpmOutput = await this.runCommand(`dpm set-device-owner ${pkg}/.a`);\n                    runInAction(() => {\n                        this.log += `Device owner set: ${dpmOutput || 'Command completed'}\\n`;\n                    });\n                } catch (error: any) {\n                    runInAction(() => {\n                        this.log += `Device owner setup failed: ${error.message}\\n`;\n                    });\n                }\n            } else if (variant === \"external\") {\n                runInAction(() => {\n                    this.log += `Skipping device owner setup for external accessibility variant.\\n`;\n                });\n            }\n            runInAction(() => {\n                this.progress = { filename: file.name, stage: Stage.Completed, value: 1 };\n            });\n        } catch (error: any) {\n            runInAction(() => {\n                this.log += `Error during package setup: ${error.message}\\n`;\n                this.progress = { filename: file.name, stage: Stage.Completed, value: 1 };\n            });\n        }\n        const elapsed = Date.now() - start;\n        const transferRate = (file.size / (elapsed / 1000) / 1024 / 1024).toFixed(2);\n        runInAction(() => {\n            this.log += `\\nInstall process completed in ${elapsed} ms at ${transferRate} MB/s\\n`;\n            this.installing = false;\n        });\n    };\n}\n\nconst state = new InstallPageState();\n\nconst InstallEgate: NextPage = () => {\n    const isDeviceConnected = Boolean(GLOBAL_STATE.adb);\n    const areButtonsDisabled = !isDeviceConnected || state.installing;\n\n    return (\n        <Stack {...RouteStackProps} tokens={{ childrenGap: 20 }}>\n            <Head>\n                <title>eGate auto-installer - WADB</title>\n            </Head>\n            <Stack horizontal tokens={{ childrenGap: 15 }}>\n                <PrimaryButton \n                    disabled={areButtonsDisabled} \n                    text=\"General\" \n                    onClick={() => state.install(\"general\")} \n                />\n                <PrimaryButton \n                    disabled={areButtonsDisabled} \n                    text=\"LG Classic\" \n                    onClick={() => state.install(\"lg-classic\")} \n                />\n                <PrimaryButton \n                    disabled={areButtonsDisabled} \n                    text=\"External Accessibility\" \n                    onClick={() => state.install(\"external\")} \n                />\n            </Stack>\n            {state.progress && (\n                <ProgressIndicator\n                    styles={{ root: { width: 300, marginTop: 20 } }}\n                    label={state.progress.filename}\n                    percentComplete={state.progress.value}\n                    description={Stage[state.progress.stage]}\n                />\n            )}\n            {state.log && (\n                <pre style={{ marginTop: 20, whiteSpace: \"pre-wrap\", fontFamily: \"monospace\" }}>\n                    {state.log}\n                </pre>\n            )}\n        </Stack>\n    );\n};\n\nexport default observer(InstallEgate);\n"],"names":["window","__NEXT_P","push","__webpack_require__","Stage","Downloading","Installing","SettingPermissions","Completed","variantAssetMap","general","external","variantUrlMap","variantPackageMap","state","constructor","installing","progress","undefined","log","options","fetchWithCorsProxy","url","lastError","proxies","targetUrl","proxyUrl","concat","encodeURIComponent","response","fetch","ok","status","method","mode","headers","i","length","runInAction","type","error","message","runCommand","cmd","GLOBAL_STATE","adb","subprocess","shell","process","decoder","TextDecoder","accumulatedOutput","reader","stdout","getReader","done","value","read","decode","stream","releaseLock","stderr","errorReader","trim","install","variant","blob","apkUrl","filename","stage","statusText","contentLength","get","parseInt","toFixed","size","fileName","file","File","lastModified","Date","now","name","pm","PackageManager","start","installLogOutput","installStream","createFileStream","pipeThrough","WrapConsumableStream","ProgressStream","action","percentage","transferred","grantRuntimePermissions","pkg","uninstallOutput","dpmOutput","elapsed","transferRate","makeAutoObservable","observable","ref","__webpack_exports__","observer","isDeviceConnected","Boolean","areButtonsDisabled","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Stack","RouteStackProps","tokens","childrenGap","jsx","Head","title","horizontal","PrimaryButton","disabled","text","onClick","ProgressIndicator","styles","root","width","marginTop","label","percentComplete","description","pre","style","whiteSpace","fontFamily"],"sourceRoot":""}